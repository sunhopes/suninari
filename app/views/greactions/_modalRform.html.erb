
<!-- Modal body for New Reaction-->
<div class="modal-content">
  <div class="modal-header">
    <h5 class="modal-title" id="reactionModalLabel">Add of New Reaction</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
      <span aria-hidden="true">&times;</span>
    </button>
  </div>
  <%=form_with model: @greaction, url: gpathway_greactions_path(@gpathway), remote: true do |f|%>   <!--create action으로 보내야 한다 -->
  <%#=form_with model: @greaction, url: new_gpathway_greaction_path(@gpathway) do |f|%>
    <div class="modal-body">
      <div class="form-group" id="reactionId">
        <label for="greaction_rxnid">Reaction ID</label>
        <%= f.text_field :rxnid, class: "form-control" %></div>
      <div class="form-group">
        <label for="greaction_reactant">Reactant Glycan</label>&nbsp;&nbsp;
        <%= select_tag :textype1, options_for_select([["IUPACcondensed", "iupaccondensed"], ["IUPACextened", "iupacextended"], ["Linear code", "linearcode"]])%><br >
        <%= f.text_field :reactant, class: "form-control" %></div>
      <div class="form-group">
        <label for="greaction_enzyme_name">Enzyme</label>
        <%= f.text_field :enzyme_name, class: "form-control autocomplete" , placeholder: "Type enzyme name" %>
        <%= f.hidden_field :enzyme_onto_id, class: "form-control" %></div>
      <div class="form-group">
        <label for="greaction_sugar_id">Sugar Nuclotide</label>
        <%= f.collection_select :sugar_id, Sugar.all, :id, :name, prompt: true, class: "form-control" %></div>
      <div class="form-group">
        <label for="greaction_texttype2">Product Glycan</label>&nbsp;&nbsp;
        <%= select_tag :textype2, options_for_select([["IUPACcondensed", "iupaccondensed"], ["IUPACextened", "iupacextended"], ["Linear code", "linearcode"]])%><br >
        <%= f.text_field :product, class: "form-control" %></div> 
      <div class="form-group">
        <label for="greaction_cellular_locate">Cellular Localizaiton</label>
        <%= f.text_field  :cellular_locate, class: "form-control autocomplete", placeholder: "Type your cellular localizaton(e.g. golgi)"  %>
        <%= f.hidden_field :cellcomp_onto_id, class: "form-control"%></div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <%= f.submit "Create", class: "btn btn-primary" %></div>
    </div>
  <% end %>
</div>

<%#=javascript_include_tag "greactions.js" %>

<!-- For autocomplete -->
<script>
 $(function(){
    var enzyme_url = "http://localhost:3003/sparqlist/api/uniprot-enzymelist";
    enzyme_xmlHttp = new XMLHttpRequest();
    enzyme_xmlHttp.open("GET", enzyme_url, false);
    enzyme_xmlHttp.send(null);
    var enzyme_result = JSON.parse(enzyme_xmlHttp.responseText);
    //console.log(enzyme_result);
      $("#greaction_enzyme_name").autocomplete({
        source: function (request, response) {
            $.ajax({
              url: enzyme_url, 
              dataType: "json",
              success: function(data) {
                response(
                  $.map(data, function (item) {
                    //console.log(item);
                    return { label: item.enzyme_name,
                             value: item.enzyme_name,
                             'data-id': item.enzyme_num  //ontology를 얻기위해서 변수를 만듬.
                    } 
                  })
                );
              },
            });
        },
        select: function( event, ui ) {
                //console.log(ui.item.value);
            $('#greaction_enzyme_onto_id').val(`${ui.item['data-id']}`);   //ontology ID 얻기
        },
        delay: 300,
        minLength: 2,
        autoFocus: true
      });
})
</script>
<script>
 $(function(){
    var cell_comp_url = "http://localhost:3003/sparqlist/api/Cellular_Compartment";
    cell_comp_xmlHttp = new XMLHttpRequest();
    cell_comp_xmlHttp.open("GET", cell_comp_url, false);
    cell_comp_xmlHttp.send(null);
    var cell_comp_result = JSON.parse(cell_comp_xmlHttp.responseText);
    //console.log(cell_comp_result);
      $("#greaction_cellular_locate").autocomplete({
        source: function (request, response) {
            $.ajax({
              url: cell_comp_url, 
              dataType: "json",
              success: function(data) {
                response(
                  $.map(data, function (item) {
                    //console.log(item);
                    return { label: item.cell_comp_name,
                             value: item.cell_comp_name,
                             'data-id': item.cell_comp_id  //ontology를 얻기위해서 변수를 만듬.
                    } 
                  })
                );
              },
            });
        },
        select: function( event, ui ) {
                //console.log(ui.item.value);
            $('#greaction_cellcomp_onto_id').val(`${ui.item['data-id']}`);   //ontology ID 얻기
        },
        delay: 300,
        minLength: 2,
        autoFocus: true
      });
})
</script>

<!-- jQuery -->
<%# <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script> %>
<!-- jQuery UI -->
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">








